---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: traefik
  labels:
    app.kubernetes.io/name: traefik-ingress
    app.kubernetes.io/managed-by: argocd
    app.kubernetes.io/instance: traefik
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: traefik-ingress
      app.kubernetes.io/instance: traefik
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: traefik-ingress
        app.kubernetes.io/managed-by: argocd
        app.kubernetes.io/instance: traefik
    spec:
      serviceAccountName: traefik
      terminationGracePeriodSeconds: 60
      containers:
      - name: traefik
        image: traefik
        imagePullPolicy: Always
        readinessProbe:
          httpGet:
            path: /ping
            port: 8080
          failureThreshold: 1
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        livenessProbe:
          httpGet:
            path: /ping
            port: 8080
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        ports:
        - name: traefik
          containerPort: 8080
          protocol: TCP
        - name: web
          containerPort: 8000
          protocol: TCP
        - name: websecure
          containerPort: 8443
          protocol: TCP
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: config
          mountPath: /config
          readOnly: true
        - name: certs
          mountPath: /certs
          readOnly: true
        args:
        - "--entryPoints.web.address=:8000/tcp"
        - "--entryPoints.websecure.address=:8443/tcp"
        - "--api.dashboard=true"
        - "--ping=true"
        - "--providers.file.filename=/config/traefik.toml"
        - "--providers.kubernetesingress"
        - "--providers.kubernetesingress.ingressendpoint.publishedservice=traefik/traefik"
        - "--entrypoints.web.http.redirections.entryPoint.to=:443"
        - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
        - "--entrypoints.websecure.http.tls=true"
        - "--log.level=INFO"
        - "--accesslog=true"
      volumes:
      - name: config
        configMap:
          name: traefik
          items:
          - key: config
            path: traefik.toml
      - name: certs
        secret:
          secretName: wildcard-sks-demo
      - name: tmp
        emptyDir: {}
      - name: plugins
        emptyDir: {}

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: traefik
  labels:
    app.kubernetes.io/name: traefik-ingress
    app.kubernetes.io/managed-by: argocd
    app.kubernetes.io/instance: traefik
data:
  config: |
    [tls.stores]
      [tls.stores.default]
        [tls.stores.default.defaultCertificate]
          certFile = "/certs/tls.crt"
          keyFile = "/certs/tls.key"

---
apiVersion: v1
kind: Service
metadata:
  name: traefik
  labels:
    app.kubernetes.io/name: traefik-ingress
    app.kubernetes.io/managed-by: argocd
    app.kubernetes.io/instance: traefik
spec:
  type: LoadBalancer
  selector:
    app.kubernetes.io/name: traefik-ingress
    app.kubernetes.io/instance: traefik
  ports:
  - port: 80
    name: web
    targetPort: "web"
    protocol: TCP
  - port: 443
    name: websecure
    targetPort: "websecure"
    protocol: TCP

---
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  annotations:
    ingressclass.kubernetes.io/is-default-class: "true"
  labels:
    app.kubernetes.io/name: traefik-ingress
    app.kubernetes.io/managed-by: argocd
    app.kubernetes.io/instance: traefik
  name: traefik
spec:
  controller: traefik.io/ingress-controller